import { OnInit, EventEmitter, Provider } from '@angular/core';
import { CalendarMonth, CalendarModalOptions, CalendarComponentOptions, CalendarDay, CalendarComponentPayloadTypes, CalendarComponentMonthChange, CalendarComponentTypeProperty } from '../calendar.model';
import { CalendarService } from '../services/calendar.service';
import { ControlValueAccessor } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
export declare const ION_CAL_VALUE_ACCESSOR: Provider;
export declare class CalendarComponent implements ControlValueAccessor, OnInit {
    calSvc: CalendarService;
    _d: CalendarModalOptions;
    _options: CalendarComponentOptions;
    _view: 'month' | 'days';
    _calendarMonthValue: CalendarDay[];
    _showToggleButtons: boolean;
    showToggleButtons: boolean;
    _showMonthPicker: boolean;
    showMonthPicker: boolean;
    monthOpt: CalendarMonth;
    format: string;
    type: CalendarComponentTypeProperty;
    readonly: boolean;
    change: EventEmitter<CalendarComponentPayloadTypes>;
    monthChange: EventEmitter<CalendarComponentMonthChange>;
    select: EventEmitter<CalendarDay>;
    selectStart: EventEmitter<CalendarDay>;
    selectEnd: EventEmitter<CalendarDay>;
    options: CalendarComponentOptions;
    constructor(calSvc: CalendarService);
    ngOnInit(): void;
    getViewDate(): CalendarComponentPayloadTypes;
    setViewDate(value: CalendarComponentPayloadTypes): void;
    switchView(): void;
    prev(): void;
    next(): void;
    prevYear(): void;
    nextYear(): void;
    nextMonth(): void;
    canNext(): boolean;
    backMonth(): void;
    canBack(): boolean;
    monthOnSelect(month: number): void;
    onChanged($event: CalendarDay[]): void;
    swipeEvent($event: any): void;
    _onChanged: Function;
    _onTouched: Function;
    _payloadToTimeNumber(value: CalendarComponentPayloadTypes): number;
    _monthFormat(date: number): string;
    private initOpt;
    createMonth(date: number): CalendarMonth;
    _createCalendarDay(value: CalendarComponentPayloadTypes): CalendarDay;
    _handleType(value: number): CalendarComponentPayloadTypes;
    writeValue(obj: any): void;
    registerOnChange(fn: () => {}): void;
    registerOnTouched(fn: () => {}): void;
    _writeValue(value: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CalendarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CalendarComponent, "ion-calendar", never, { "format": "format"; "type": "type"; "readonly": "readonly"; "options": "options"; }, { "change": "change"; "monthChange": "monthChange"; "select": "select"; "selectStart": "selectStart"; "selectEnd": "selectEnd"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNhbGVuZGFyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCwgRXZlbnRFbWl0dGVyLCBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2FsZW5kYXJNb250aCwgQ2FsZW5kYXJNb2RhbE9wdGlvbnMsIENhbGVuZGFyQ29tcG9uZW50T3B0aW9ucywgQ2FsZW5kYXJEYXksIENhbGVuZGFyQ29tcG9uZW50UGF5bG9hZFR5cGVzLCBDYWxlbmRhckNvbXBvbmVudE1vbnRoQ2hhbmdlLCBDYWxlbmRhckNvbXBvbmVudFR5cGVQcm9wZXJ0eSB9IGZyb20gJy4uL2NhbGVuZGFyLm1vZGVsJztcbmltcG9ydCB7IENhbGVuZGFyU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL2NhbGVuZGFyLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBJT05fQ0FMX1ZBTFVFX0FDQ0VTU09SOiBQcm92aWRlcjtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIENhbGVuZGFyQ29tcG9uZW50IGltcGxlbWVudHMgQ29udHJvbFZhbHVlQWNjZXNzb3IsIE9uSW5pdCB7XG4gICAgY2FsU3ZjOiBDYWxlbmRhclNlcnZpY2U7XG4gICAgX2Q6IENhbGVuZGFyTW9kYWxPcHRpb25zO1xuICAgIF9vcHRpb25zOiBDYWxlbmRhckNvbXBvbmVudE9wdGlvbnM7XG4gICAgX3ZpZXc6ICdtb250aCcgfCAnZGF5cyc7XG4gICAgX2NhbGVuZGFyTW9udGhWYWx1ZTogQ2FsZW5kYXJEYXlbXTtcbiAgICBfc2hvd1RvZ2dsZUJ1dHRvbnM6IGJvb2xlYW47XG4gICAgc2hvd1RvZ2dsZUJ1dHRvbnM6IGJvb2xlYW47XG4gICAgX3Nob3dNb250aFBpY2tlcjogYm9vbGVhbjtcbiAgICBzaG93TW9udGhQaWNrZXI6IGJvb2xlYW47XG4gICAgbW9udGhPcHQ6IENhbGVuZGFyTW9udGg7XG4gICAgZm9ybWF0OiBzdHJpbmc7XG4gICAgdHlwZTogQ2FsZW5kYXJDb21wb25lbnRUeXBlUHJvcGVydHk7XG4gICAgcmVhZG9ubHk6IGJvb2xlYW47XG4gICAgY2hhbmdlOiBFdmVudEVtaXR0ZXI8Q2FsZW5kYXJDb21wb25lbnRQYXlsb2FkVHlwZXM+O1xuICAgIG1vbnRoQ2hhbmdlOiBFdmVudEVtaXR0ZXI8Q2FsZW5kYXJDb21wb25lbnRNb250aENoYW5nZT47XG4gICAgc2VsZWN0OiBFdmVudEVtaXR0ZXI8Q2FsZW5kYXJEYXk+O1xuICAgIHNlbGVjdFN0YXJ0OiBFdmVudEVtaXR0ZXI8Q2FsZW5kYXJEYXk+O1xuICAgIHNlbGVjdEVuZDogRXZlbnRFbWl0dGVyPENhbGVuZGFyRGF5PjtcbiAgICBvcHRpb25zOiBDYWxlbmRhckNvbXBvbmVudE9wdGlvbnM7XG4gICAgY29uc3RydWN0b3IoY2FsU3ZjOiBDYWxlbmRhclNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgZ2V0Vmlld0RhdGUoKTogQ2FsZW5kYXJDb21wb25lbnRQYXlsb2FkVHlwZXM7XG4gICAgc2V0Vmlld0RhdGUodmFsdWU6IENhbGVuZGFyQ29tcG9uZW50UGF5bG9hZFR5cGVzKTogdm9pZDtcbiAgICBzd2l0Y2hWaWV3KCk6IHZvaWQ7XG4gICAgcHJldigpOiB2b2lkO1xuICAgIG5leHQoKTogdm9pZDtcbiAgICBwcmV2WWVhcigpOiB2b2lkO1xuICAgIG5leHRZZWFyKCk6IHZvaWQ7XG4gICAgbmV4dE1vbnRoKCk6IHZvaWQ7XG4gICAgY2FuTmV4dCgpOiBib29sZWFuO1xuICAgIGJhY2tNb250aCgpOiB2b2lkO1xuICAgIGNhbkJhY2soKTogYm9vbGVhbjtcbiAgICBtb250aE9uU2VsZWN0KG1vbnRoOiBudW1iZXIpOiB2b2lkO1xuICAgIG9uQ2hhbmdlZCgkZXZlbnQ6IENhbGVuZGFyRGF5W10pOiB2b2lkO1xuICAgIHN3aXBlRXZlbnQoJGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIF9vbkNoYW5nZWQ6IEZ1bmN0aW9uO1xuICAgIF9vblRvdWNoZWQ6IEZ1bmN0aW9uO1xuICAgIF9wYXlsb2FkVG9UaW1lTnVtYmVyKHZhbHVlOiBDYWxlbmRhckNvbXBvbmVudFBheWxvYWRUeXBlcyk6IG51bWJlcjtcbiAgICBfbW9udGhGb3JtYXQoZGF0ZTogbnVtYmVyKTogc3RyaW5nO1xuICAgIHByaXZhdGUgaW5pdE9wdDtcbiAgICBjcmVhdGVNb250aChkYXRlOiBudW1iZXIpOiBDYWxlbmRhck1vbnRoO1xuICAgIF9jcmVhdGVDYWxlbmRhckRheSh2YWx1ZTogQ2FsZW5kYXJDb21wb25lbnRQYXlsb2FkVHlwZXMpOiBDYWxlbmRhckRheTtcbiAgICBfaGFuZGxlVHlwZSh2YWx1ZTogbnVtYmVyKTogQ2FsZW5kYXJDb21wb25lbnRQYXlsb2FkVHlwZXM7XG4gICAgd3JpdGVWYWx1ZShvYmo6IGFueSk6IHZvaWQ7XG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbjogKCkgPT4ge30pOiB2b2lkO1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiAoKSA9PiB7fSk6IHZvaWQ7XG4gICAgX3dyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XG59XG4iXX0=